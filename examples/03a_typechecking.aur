%interpolate <% %>

!def check_integer(name, min=None, max=None):
    if not isinstance(<% name %>, int):
        raise ValueError(f"expected {<% name %>=} to be an integer")
    !if min is not None:
        if <% name %> < <% min %>:
            raise ValueError(f"expected {<% name %>=} >= <% min %>")
    !if max is not None:
        if <% name %> > <% min %>:
            raise ValueError(f"expected {<% name %>=} <= <% max %>")

!def check_types(name, config):
    !if config["type"] == "integer":
        !check_integer(name, config.get("min"), config.get("max"))
    !if config["type"] == "object":
        if not isinstance(<% name %>, object):
            raise ValueError(f"expected {<% name %>=} to be an object")
        !for key, value in config["attributes"].items():
            !check_types(f"{name}.{key}", value)